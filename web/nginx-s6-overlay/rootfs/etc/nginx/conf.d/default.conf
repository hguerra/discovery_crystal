# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=static:10m rate=100r/s;
limit_req_zone $binary_remote_addr zone=app:10m rate=20r/s;

# Upstream para load balancing das instâncias Crystal
upstream crystal_cluster {
    # Round-robin load balancing (padrão)
    server localhost:3001 weight=1 max_fails=3 fail_timeout=30s;
    server localhost:3002 weight=1 max_fails=3 fail_timeout=30s;
    server localhost:3003 weight=1 max_fails=3 fail_timeout=30s;

    # Configurações de health check
    keepalive 32;  # Conexões persistentes
}

server {
  listen 8080;

  # Ocultar header Server
  server_tokens off;
  add_header Server "" always;

  # Compressão gzip
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

  # Headers de segurança
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;

  # ============================================================================
  # API ENDPOINTS (deve vir ANTES de qualquer outro bloco)
  # ============================================================================
  location /api {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://crystal_cluster;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Request-ID $request_id;
    proxy_connect_timeout 5s;
    proxy_send_timeout 10s;
    proxy_read_timeout 10s;

    # ============================================================================
    # CONFIGURAÇÃO DE PROXY BUFFERING - TRADEOFFS DE PERFORMANCE
    # ============================================================================
    #
    # proxy_buffering off (ATUAL):
    # ✅ VANTAGENS:
    #   - Latência mínima (resposta enviada imediatamente)
    #   - Menor uso de memória (sem buffers)
    #   - Ideal para APIs de resposta rápida
    #   - Melhor para streaming/real-time
    #   - Simples e previsível
    #
    # ❌ DESVANTAGENS:
    #   - Maior uso de CPU (nginx não pode otimizar)
    #   - Pode bloquear se cliente for lento
    #   - Não aproveita otimizações de buffer
    #   - Menor throughput sob carga alta
    #
    # ALTERNATIVA: proxy_buffering on + buffers otimizados:
    # ✅ VANTAGENS:
    #   - Maior throughput sob carga
    #   - Menor uso de CPU (otimizações)
    #   - Mais estável com clientes lentos
    #   - Melhor para respostas grandes
    #
    # ❌ DESVANTAGENS:
    #   - Latência ligeiramente maior
    #   - Maior uso de memória
    #   - Configuração mais complexa
    #   - Pode mascarar problemas de performance
    #
    # DECISÃO: Manter proxy_buffering off para este projeto porque:
    # - Crystal backend é muito rápido
    # - APIs simples com respostas pequenas
    # - Latência baixa é prioridade
    # - Container com recursos limitados
    # ============================================================================

    # Configuração atual: menor latência, maior uso de CPU
    proxy_buffering off;

    # Configuração alternativa comentada (para referência):
    # proxy_buffering on;
    # proxy_buffer_size 4k;        # Buffer para headers
    # proxy_buffers 8 4k;          # 8 buffers de 4k cada
    # proxy_busy_buffers_size 8k;  # Máximo de buffers ocupados
  }

  # ============================================================================
  # SPA /app (React) - serve index.html da SPA para qualquer rota /app*
  # ============================================================================
  location /app {
    limit_req zone=app burst=30 nodelay;

    # Verificar cookie de sessão
    if ($cookie_session_token = "") {
      return 302 /login?redirect=$request_uri;
    }

    add_header X-Frame-Options "DENY" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;
    alias /var/www/html/app/;
    try_files $uri $uri/ /app/index.html;
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|map)$ {
      expires 1y;
      add_header Cache-Control "public, immutable, max-age=31536000";
      access_log off;
    }
  }

  # ============================================================================
  # PÁGINA DE LOGIN
  # ============================================================================
  location /login {
    limit_req zone=static burst=50 nodelay;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    root /var/www/html/public;
    try_files /login.html /index.html =404;
  }

  # ============================================================================
  # CACHE PARA ARQUIVOS ESTÁTICOS (deve vir ANTES do location /)
  # ============================================================================
  location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    root /var/www/html/public;
    expires 1y;
    add_header Cache-Control "public, immutable, max-age=31536000";
    access_log off;
  }

  # ============================================================================
  # SITE PÚBLICO (/) - Landing page
  # ============================================================================
  location / {
    limit_req zone=static burst=100 nodelay;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    root /var/www/html/public;
    index index.html;
    try_files $uri $uri/ =404;
  }
}
