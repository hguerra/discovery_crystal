user  nginx;
worker_processes  auto;

# Direcionar error_log para stderr (padrão para containers)
error_log  /dev/stderr notice;
pid        /run/nginx.pid;

# Otimizações de worker processes
worker_rlimit_nofile 65536;

events {
    worker_connections  1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Mapeamento de status HTTP para severity
    map $status $log_severity {
        ~^2  "INFO";
        ~^3  "INFO";
        ~^4  "WARNING";
        ~^5  "ERROR";
        default "INFO";
    }

    # Log format padrão (mantido para compatibilidade)
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Log format JSON seguindo padrão GCP
    log_format json_escape escape=json '{'
        '"timestamp": "$time_iso8601",'
        '"severity": "$log_severity",'
        '"httpRequest": {'
            '"requestMethod": "$request_method",'
            '"requestUrl": "$request_uri",'
            '"requestSize": "$request_length",'
            '"status": $status,'
            '"responseSize": "$body_bytes_sent",'
            '"userAgent": "$http_user_agent",'
            '"remoteIp": "$remote_addr",'
            '"serverIp": "$server_addr",'
            '"referer": "$http_referer",'
            '"latency": "$request_time",'
            '"protocol": "$server_protocol"'
        '},'
        '"traceparent": "$http_traceparent",'
        '"logging.googleapis.com/tracestate": "$http_tracestate",'
        '"resource": {'
            '"type": "http_load_balancer"'
        '},'
        '"logging.googleapis.com/trace": "$http_traceparent",'
        '"logging.googleapis.com/trace_sampled": true'
    '}';

    # Log format JSON simplificado (alternativa mais limpa)
    log_format json_simple escape=json '{'
        '"timestamp": "$time_iso8601",'
        '"severity": "$log_severity",'
        '"httpRequest": {'
            '"requestMethod": "$request_method",'
            '"requestUrl": "$request_uri",'
            '"status": $status,'
            '"responseSize": "$body_bytes_sent",'
            '"userAgent": "$http_user_agent",'
            '"remoteIp": "$remote_addr",'
            '"latency": "$request_time",'
            '"protocol": "$server_protocol"'
        '},'
        '"resource": {'
            '"type": "http_load_balancer"'
        '}'
    '}';

    # Direcionar access_log para stdout em formato JSON (padrão para containers)
    access_log  /dev/stdout json_escape;

    # Otimizações de performance
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    # Timeouts otimizados
    keepalive_timeout  65;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Otimizações de buffer
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Segurança
    server_tokens off;

    include /etc/nginx/conf.d/*.conf;
}
