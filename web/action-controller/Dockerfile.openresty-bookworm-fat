# node-base
FROM node:22-alpine AS node-base
RUN corepack enable
RUN corepack prepare pnpm@latest-10 --activate


# site-node-deps
FROM node-base AS site-node-deps
WORKDIR /usr/src/app
COPY ./ui/site/package.json ./ui/site/pnpm-lock.yaml* ./
RUN pnpm i --frozen-lockfile


# site-node-builder
FROM node-base AS site-node-builder
WORKDIR /usr/src/app
COPY ./ui/site/ ./
COPY --from=site-node-deps /usr/src/app/node_modules ./node_modules
RUN pnpm build


#
# Crystal
#
FROM crystallang/crystal:1.16 AS crystal-builder
WORKDIR /usr/src/app

COPY shard.yml shard.yml
COPY shard.override.yml shard.override.yml
COPY shard.lock shard.lock

RUN shards install --production --ignore-crystal-version --skip-postinstall --skip-executables

COPY ./src ./src

RUN shards build --production --release --error-trace

RUN ./bin/app --docs --file=openapi.yml
#
#
#


# openresty-base
FROM openresty/openresty:1.25.3.2-5-bookworm-fat AS openresty-base

RUN apt-get update && apt-get install -y \
    libyaml-dev \
    htop \
    && rm -rf /var/lib/apt/lists/*


# production image
FROM openresty-base
LABEL maintainer="Heitor Carneiro <heitorgcarneiro@gmail.com>"

RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

COPY ./config/nginx.conf /usr/local/openresty/nginx/conf/nginx.conf
COPY ./entrypoint-openresty.sh ./entrypoint-openresty.sh
RUN chmod 755 ./entrypoint-openresty.sh
# COPY ./.env ./.env

COPY --from=site-node-builder /usr/src/app/dist/ ./ui/site/


#
# Crystal
#
COPY --from=crystal-builder /usr/src/app/bin/app ./api/
COPY --from=crystal-builder /usr/src/app/openapi.yml ./api/openapi.yml
HEALTHCHECK CMD ["/usr/src/app/api/app", "-c", "http://127.0.0.1:3000/"]
#
#
#


EXPOSE 8080
ENTRYPOINT ["./entrypoint-openresty.sh"]
